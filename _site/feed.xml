<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andres Galante</title>
    <description>This is Andrés Galantes personal blog. Cyclist, dad, designer, diver, entrepreneur, frontend coder,  guitarist, redhatter, husband and tenis player (in alphabetical order).
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 15 May 2017 16:08:49 -0300</pubDate>
    <lastBuildDate>Mon, 15 May 2017 16:08:49 -0300</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Do I look thick?</title>
        <description>&lt;p&gt;&lt;img src=&quot;/img/border/border.jpg&quot; alt=&quot;Border width makes no sese&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You know that feeling when you use an obscure color name? There is something special about using CSS keywords… or maybe there’s just something really wrong with me.&lt;/p&gt;

&lt;p&gt;This week I massaged my ego by trying to use keywords for border width on &lt;a href=&quot;https://www.patternfly.org/&quot;&gt;PatternFly&lt;/a&gt;. My reasoning was that since nowadays we use relative units for everything except from borders, maybe by using keywords we can achieve cleaner results and ditch fixed units once and for all.&lt;/p&gt;

&lt;p&gt;I couldn’t be more wrong.&lt;/p&gt;

&lt;h2 id=&quot;thin-medium-thick-what-is-it-it-good-for-absolutely-nothing&quot;&gt;Thin, Medium, Thick, what is it it good for? Absolutely nothing!&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.w3.org/TR/css3-background/#the-border-width&quot;&gt;CSS Backgrounds and Borders Module Level 3&lt;/a&gt; defines &lt;code class=&quot;highlighter-rouge&quot;&gt;border-width&lt;/code&gt; as the property that sets the thickness of the border. Where:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The lengths corresponding to ‘thin’, ‘medium’ and ‘thick’ are not specified, but the values are constant throughout a document and thin ≤ medium ≤ thick. A UA could, e.g., make the thickness depend on the ‘medium’ font size: one choice might be 1, 3 &amp;amp; 5px when the ‘medium’ font size is 17px or less. Negative &lt;length&gt;values are not allowed.”&lt;/length&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After testing these keywords on different browsers we’ve got consistent results:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1px for &lt;code class=&quot;highlighter-rouge&quot;&gt;thin&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;3px for &lt;code class=&quot;highlighter-rouge&quot;&gt;medium&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;and 5px for &lt;code class=&quot;highlighter-rouge&quot;&gt;thick&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;High density screens like a retina display or an iPhone renders 2 times value, as expected. For example a &lt;code class=&quot;highlighter-rouge&quot;&gt;thin&lt;/code&gt; line will render 2px on an iPhone.&lt;/p&gt;

&lt;p&gt;I’ve also noticed that the thickness is not attached to the font size since, meaning it doesn’t change when I modify the font size.&lt;/p&gt;

&lt;h2 id=&quot;awesome-so-whats-the-matter&quot;&gt;Awesome! so, what’s the matter?&lt;/h2&gt;

&lt;p&gt;The problem is that the spec is so loose that renders these keywords useless.&lt;/p&gt;

&lt;p&gt;The fact that a browser is allow to display &lt;code class=&quot;highlighter-rouge&quot;&gt;thin&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;medium&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;thick&lt;/code&gt; the exact same width or even change following other measurements like font-size makes using these keywords unpredictable.&lt;/p&gt;

&lt;p&gt;Building with &lt;code class=&quot;highlighter-rouge&quot;&gt;thin&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;medium&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;thick&lt;/code&gt; would be the same as building over quicksand. Today ‘thin’ means 1px, tomorrow we don’t know.&lt;/p&gt;

&lt;h2 id=&quot;the-px-to-rems-sass-converter-mixin&quot;&gt;The px to rems Sass converter mixin&lt;/h2&gt;

&lt;p&gt;If you do want to write relative units based on pixels, there are &lt;a href=&quot;https://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/&quot;&gt;many sass mixings&lt;/a&gt; you can use. I wrote a small Sass function to translate &lt;code class=&quot;highlighter-rouge&quot;&gt;px&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;rem&lt;/code&gt; too:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sass&quot; data-lang=&quot;sass&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$font-size-root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;browsers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;px-to-rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$px-value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$px-value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$font-size-root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1rem&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;one-px-border&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; { &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;border-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;px-to-rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And you can &lt;a href=&quot;http://blog.andresgalante.com/css/2017/01/27/font-size.html&quot;&gt;read all about it on this blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although this is still quicksand, it’s a better solution. The browser font size base can vary and the border will change when the root font size changes, but  hey, maybe that’s what you are looking for anyway!&lt;/p&gt;

&lt;h2 id=&quot;what-did-i-learn&quot;&gt;What did I learn?&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/emHSO5dr6dk&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;CSS, much like life and the TV show “Friends” teaches us that the answer to the questions “Do I look &lt;code class=&quot;highlighter-rouge&quot;&gt;thick&lt;/code&gt;?” doesn’t really matters since it’s always a lie.&lt;/p&gt;

&lt;p&gt;I’d love to hear what you think about this. Should I just use pixels and stop whining about it?&lt;/p&gt;
</description>
        <pubDate>Mon, 15 May 2017 05:00:00 -0300</pubDate>
        <link>http://localhost:4000/css/2017/05/15/do-i-look-thick.html</link>
        <guid isPermaLink="true">http://localhost:4000/css/2017/05/15/do-i-look-thick.html</guid>
        
        <category>css</category>
        
        <category>design</category>
        
        <category>patternfly</category>
        
        
        <category>css</category>
        
        <author>
          <name>Andres Galante</name>
          <email>a@andresgalante.com</email>
        </author>
      </item>
    
      <item>
        <title>Mobile, Small, Portrait, Slow, Interlace, Monochrome, Coarse, Non-Hover, First</title>
        <description>
</description>
        <pubDate>Fri, 05 May 2017 07:00:00 -0300</pubDate>
        <link>http://localhost:4000/css/2017/05/05/mobile-small-portrait-slow-interlace-monochrome-coarse-non-hover-first.html</link>
        <guid isPermaLink="true">http://localhost:4000/css/2017/05/05/mobile-small-portrait-slow-interlace-monochrome-coarse-non-hover-first.html</guid>
        
        <category>css</category>
        
        <category>design</category>
        
        <category>patternfly</category>
        
        
        <category>css</category>
        
        <author>
          <name>Andres Galante</name>
          <email>a@andresgalante.com</email>
        </author>
      </item>
    
      <item>
        <title>Touch devices should not be judged by their size</title>
        <description>
</description>
        <pubDate>Mon, 27 Feb 2017 07:00:00 -0300</pubDate>
        <link>http://localhost:4000/css/2017/02/27/touch-devices-not-judged-size.html</link>
        <guid isPermaLink="true">http://localhost:4000/css/2017/02/27/touch-devices-not-judged-size.html</guid>
        
        <category>css</category>
        
        <category>design</category>
        
        <category>patternfly</category>
        
        
        <category>css</category>
        
        <author>
          <name>Andres Galante</name>
          <email>a@andresgalante.com</email>
        </author>
      </item>
    
      <item>
        <title>Lost in font-size translation</title>
        <description>&lt;p&gt;&lt;img src=&quot;/img/font-size/font-size.jpg&quot; alt=&quot;Font size pixels to rems&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Beginnings are never easy and setting good foundations for a project is key to avoid
headaches down the road.&lt;/p&gt;

&lt;p&gt;That’s why the CSS Army decided to use relative units to measure typography (and
everything else except from borders) to develop the CSS of the latest version of
PatternFly.&lt;/p&gt;

&lt;h2 id=&quot;rems&quot;&gt;Rems&lt;/h2&gt;

&lt;p&gt;We measure fonts-sizes in rems.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“rem values are relative to the root html element.”&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/font-size#Rems&quot;&gt;Mozilla Developer Network&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example if the root html is set to &lt;code class=&quot;highlighter-rouge&quot;&gt;20px&lt;/code&gt;, then &lt;code class=&quot;highlighter-rouge&quot;&gt;1rem = 20 px&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The trick is to avoid hard coding a font-size for the html element. That way
1rem will be equal to the font size base of the browser. In most cases it’s
&lt;code class=&quot;highlighter-rouge&quot;&gt;16px&lt;/code&gt;, but users can set it larger or smaller, or browsers can have a larger or
smaller root font size according to its environment.&lt;/p&gt;

&lt;p&gt;By using rems the typography hierarchy changes proportionally following the
browser’s setting.&lt;/p&gt;

&lt;p&gt;It sounds awesome, right? Well… there is one challenge.&lt;/p&gt;

&lt;p&gt;Photoshop can’t do font-sizes in rems. And when the visual designers delivers a
mock up with a font-size in &lt;code class=&quot;highlighter-rouge&quot;&gt;px&lt;/code&gt; we need to find a way to express it in &lt;code class=&quot;highlighter-rouge&quot;&gt;rems&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;math-and-sass-to-the-rescue&quot;&gt;Math and Sass to the rescue&lt;/h2&gt;

&lt;p&gt;With a little bit of math, the translation from px to rem is easy. First we
create a variable to set a value for the root. We don’t apply this value to any
element, it works just as a reference point.&lt;/p&gt;

&lt;p&gt;Since most browsers font size base is &lt;code class=&quot;highlighter-rouge&quot;&gt;16px&lt;/code&gt;, then the font-size-root variable is
&lt;code class=&quot;highlighter-rouge&quot;&gt;16&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;font-size-root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s say that the visual designer sets the h1 to 24px. If this equation is true [24 = 24/16 * 16], then this is also true [24 = (24 / $font-size-root) * 1rem] since $font-size-root and 1rem represent the same value. Additionally, since (24 / $font-size-root) yields a numeric value of 1.5 without a unit, multiplying this value by 1rem provides the rem unit, making the final result of this equation 1.5rem.&lt;/p&gt;

&lt;p&gt;The sass formula end up been:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;font-size-root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1rem&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Putting it all together it looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;font-size-root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1-font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;font-size-root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1rem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h1-font-size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;its-like-cheating&quot;&gt;It’s like cheating&lt;/h2&gt;

&lt;p&gt;We are using this technique to set font-sizes, margins and paddings and it has
yielded excellent results.&lt;/p&gt;

&lt;p&gt;It’s not like cheating, it is cheating. It is also the best way to reproduce
Photoshop image in code maintaining the benefits of relative units.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;UPDATE 5/15/2017&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To make things easier, I wrote a Sass function to translate &lt;code class=&quot;highlighter-rouge&quot;&gt;px&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;rem&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sass&quot; data-lang=&quot;sass&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$font-size-root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;browsers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;px-to-rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$px&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$font-size-root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1rem&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; { &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;px-to-rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Fri, 27 Jan 2017 05:00:00 -0300</pubDate>
        <link>http://localhost:4000/css/2017/01/27/font-size.html</link>
        <guid isPermaLink="true">http://localhost:4000/css/2017/01/27/font-size.html</guid>
        
        <category>css</category>
        
        <category>design</category>
        
        <category>patternfly</category>
        
        
        <category>css</category>
        
        <author>
          <name>Andres Galante</name>
          <email>a@andresgalante.com</email>
        </author>
      </item>
    
      <item>
        <title>Just because a device is large, it doesn't mean it doesn't want to be touched</title>
        <description>&lt;p&gt;&lt;img src=&quot;/img/touch/touch.jpg&quot; alt=&quot;Touch screens media query&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s face it, front end development is a bitch.&lt;/p&gt;

&lt;p&gt;As we started discussing how to design enterprise application UI element on mobile environments, the talented ladies working with me (yes, I am talking about you Jenn and Sarah) pointed out that touch devices should not be judge by their size.&lt;/p&gt;

&lt;p&gt;Assuming that a small viewport device has a touch screen and a large doesn’t is a mistake since the twisted minds in the hardware industry have created massive touchscreen TVs, really large tablets like the iPad Pro and even a huge touch desktop PCs like the new (and jaw dropping) Surface Studio.&lt;/p&gt;

&lt;p&gt;This adds a new layer of complexity to the already complicated world of interaction design and front end development.&lt;/p&gt;

&lt;p&gt;Responsive viewport media queries are great to accommodate our UIs elements, but designing small clickable areas on large screens guessing that our users will have a mouse pointer is a mistake.&lt;/p&gt;

&lt;p&gt;We know we can detect touch screens with tools like &lt;a href=&quot;https://modernizr.com/&quot;&gt;modernizr&lt;/a&gt;, but I want to keep our &lt;a href=&quot;http://www.patternfly.org/&quot;&gt;PatternFly&lt;/a&gt; CSS efforts away from javascript. Is there a way to query a touch screen with CSS? Spoiler alert: the answer is yes!&lt;/p&gt;

&lt;h2 id=&quot;interaction-media-features&quot;&gt;Interaction Media Features&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3.org/Style/CSS/members.en.php3&quot;&gt;The nice people at the W3C CSS Working Group&lt;/a&gt; have been guiding the CSS community to a solution.&lt;/p&gt;

&lt;p&gt;On the &lt;a href=&quot;https://drafts.csswg.org/mediaqueries/&quot;&gt;Media Queries Level 4 Working Draft&lt;/a&gt; there is a spec for &lt;a href=&quot;https://drafts.csswg.org/mediaqueries/#mf-interaction&quot;&gt;Interaction Media Features&lt;/a&gt; that includes three definitions: &lt;a href=&quot;https://drafts.csswg.org/mediaqueries/#pointer&quot;&gt;Pointing Device Quality&lt;/a&gt;, &lt;a href=&quot;https://drafts.csswg.org/mediaqueries/#hover&quot;&gt;Hover Capability&lt;/a&gt; and &lt;a href=&quot;https://drafts.csswg.org/mediaqueries/#any-input&quot;&gt;Rare Interaction Capabilities&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Together they allow a media query to be set based on the presence and accuracy of the user’s pointing device, and whether they have the ability to hover over elements on the page.&lt;/p&gt;

&lt;p&gt;Let’s take a close look at each one of them.&lt;/p&gt;

&lt;h3 id=&quot;pointing-device-quality-the-pointer-feature&quot;&gt;Pointing Device Quality: the pointer feature&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The pointer media feature is used to query about the presence and accuracy of a pointing device such as a mouse. If a device has multiple input mechanisms, the pointer media feature must reflect the characteristics of the “primary” input mechanism, as determined by the user agent.” - W3C&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The key word here is “accuracy” of the pointing device.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A mouse or a drawing styluses is very accurate and it takes the value of &lt;code class=&quot;highlighter-rouge&quot;&gt;fine&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;A finger or a Kinect peripheral isn’t, and it takes the value of &lt;code class=&quot;highlighter-rouge&quot;&gt;coarse&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore we can detect if a screen is touch with a simple media query. This is useful for example to make hit areas larger if the user has a touch screen.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coarse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;hover-capability-the-hover-feature&quot;&gt;Hover Capability: the hover feature&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The hover media feature is used to query the user’s ability to hover over elements on the page. If a device has multiple input mechanisms, the hover media feature must reflect the characteristics of the “primary” input mechanism, as determined by the user agent.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s important to notice that it only evaluates the primary input device. A device with multiple input mechanisms that’s able to hover will query as “none”.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“For example, a touchscreen where a long press is treated as hovering would match hover: none.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;A touch screen device where the primary point system is the finger and can’t hover will take the value of “none”&lt;/li&gt;
  &lt;li&gt;A device where the primary input is mouse and can easily hover parts of the page takes the value of “hover”&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A classic example to use this query is a dropdown menu.&lt;/p&gt;

&lt;h3 id=&quot;rare-interaction-capabilities-the-any-pointer-and-any-hover-features&quot;&gt;Rare Interaction Capabilities: the any-pointer and any-hover features&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The any-pointer and any-hover media features are identical to the pointer and hover media features, but they correspond to the union of capabilities of all the pointing devices available to the user. More than one of their values can match, if different pointing devices have different characteristics. They must only match none if all of the pointing devices would match none for the corresponding query, or there are no pointing devices at all.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is rarely used. An example can be a touch TV that also has a pointer device.&lt;/p&gt;

&lt;h3 id=&quot;device-examples&quot;&gt;Device examples&lt;/h3&gt;

&lt;p&gt;Typical examples of devices matching combinations of pointer and hover:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pointer: coarse&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pointer: fine&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hover: none&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;smartphones, touch screens&lt;/td&gt;
      &lt;td&gt;stylus-based screens (Cintiq, Wacom, etc)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hover: hover&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Nintendo Wii controller, Kinect&lt;/td&gt;
      &lt;td&gt;mouse, touch pad&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This is really cool, right? I hear you shouting: what about browser support?&lt;/p&gt;

&lt;h2 id=&quot;browser-support-isnt-poop-at-all&quot;&gt;Browser support isn’t :poop: at all!&lt;/h2&gt;

&lt;p&gt;Even though this is a working draft it has &lt;a href=&quot;http://caniuse.com/#feat=css-media-interaction&quot;&gt;pretty good support&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://codepen.io/andresgalante/pen/bBEJKg?editors=0100&quot;&gt;My simple test&lt;/a&gt; proved successful on Chrome, Chrome for Android, Safari, Edge, Opera, Samsung browser and Android Browser but it didn’t work on FireFox, Opera Mini or IE.&lt;/p&gt;

&lt;iframe height=&quot;300&quot; scrolling=&quot;no&quot; title=&quot;Touch screen test&quot; src=&quot;//codepen.io/andresgalante/embed/bBEJKg/?height=300&amp;amp;theme-id=20015&amp;amp;default-tab=css,result&amp;amp;embed-version=2&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; style=&quot;width: 100%;&quot;&gt;
&lt;/iframe&gt;

&lt;p&gt;FireFox and IE &lt;a href=&quot;https://www.netmarketshare.com/browser-market-share.aspx?qprid=0&amp;amp;qpcustomd=1&quot;&gt;represent only a bit more than 2% mobile/tablet browser market share&lt;/a&gt;. I couldn’t find information about touch TVs or other touch screens devices that are not mobile or tablets.&lt;/p&gt;

&lt;p&gt;I think we are ready to take the progressive engagement approach with this feature, and as FireFox adds support for it and IE dies once and for all we will have full support.&lt;/p&gt;

&lt;h2 id=&quot;have-i-mention-that-front-end-development-is-a-bitch&quot;&gt;Have I mention that front end development is a bitch?&lt;/h2&gt;

&lt;p&gt;This exponentially opens the door to exciting new challenges (and by “challenges” I mean “problems”).&lt;/p&gt;

&lt;p&gt;The obvious immediate enhancement on our UIs are around click zones with &lt;code class=&quot;highlighter-rouge&quot;&gt;pointer&lt;/code&gt; and dropdowns with &lt;code class=&quot;highlighter-rouge&quot;&gt;hover&lt;/code&gt;. But I am sure there are nifty mysterious ways to use these features that people smarter than me (and I am pointing at you Jenn and Sarah again) will discover.&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Nov 2016 07:00:00 -0300</pubDate>
        <link>http://localhost:4000/css/2016/11/13/interaction-media.html</link>
        <guid isPermaLink="true">http://localhost:4000/css/2016/11/13/interaction-media.html</guid>
        
        <category>css</category>
        
        <category>design</category>
        
        <category>patternfly</category>
        
        
        <category>css</category>
        
        <author>
          <name>Andres Galante</name>
          <email>a@andresgalante.com</email>
        </author>
      </item>
    
      <item>
        <title>The Tree of Wisdom</title>
        <description>&lt;p&gt;&lt;img src=&quot;/img/tree/tree.jpg&quot; alt=&quot;PatternFly decision tree&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Think about a design system as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Tamagotchi&quot;&gt;tamagotchi&lt;/a&gt;. To keep it alive once your turn it on, you need to take care of it: keep it clean, feed it and make it sleep, almost like a living creature.&lt;/p&gt;

&lt;p&gt;That’s why supporting and maintaining a design system can be more challenging than initially creating it. A smart strategy, really good rules and a lot of love and patience is the only way to guarantee long-term success.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“A critical part of design system maintenance is ensuring that UI patterns stay up to date, embrace evolving design and development best practices, and continue to address the real needs of the organization.” - &lt;a href=&quot;http://atomicdesign.bradfrost.com/chapter-5/#making-changes-to-patterns&quot;&gt;Brad Frost&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To govern the &lt;a href=&quot;https://docs.vanillaframework.io/&quot;&gt;Vanilla Design System&lt;/a&gt;, the Canonical web team developed a fascinating decision tree and PatternFly took a similar approach.&lt;/p&gt;

&lt;h2 id=&quot;the-patternfly-decision-tree&quot;&gt;The PatternFly Decision Tree&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://drive.google.com/a/redhat.com/file/d/0By4Lm65O5b3rTGhPZTVnSThyLWc/view?usp=sharing&quot;&gt;&lt;img src=&quot;/img/tree/patternfly-decision-tree.png&quot; alt=&quot;PatternFly decision tree&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The goal for PatternFly is to deliver a set of common and modular UI components. The goal of the PatternFly decision tree is to identify common components and that we have all the parts to build them.&lt;/p&gt;

&lt;p&gt;To define what makes a component common, we chose to follow a simple general rule: if more than two projects using PatternFly are asking for the same component, then it’s considered common.&lt;/p&gt;

&lt;p&gt;To determine whether or not a component is modular requires deconstructing the component into smaller blocks to understand the underlying structure of that component. That way we can ensure we are building reusable parts instead of reinventing the wheel every time we introduce a new pattern.&lt;/p&gt;

&lt;p&gt;The three outcomes are for a pattern to be modified, added, or removed from the design system.&lt;/p&gt;

&lt;h2 id=&quot;practicing-what-we-preach&quot;&gt;Practicing What We Preach&lt;/h2&gt;

&lt;p&gt;This process doesn’t only apply to new patterns. We are running our existing components through the decision tree.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“A design system needs ongoing maintenance, support, and tender loving care for it to truly thrive.” - &lt;a href=&quot;http://atomicdesign.bradfrost.com/chapter-5/#establishing-a-design-system-team&quot;&gt;Brad Frost&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We will have be having regular assessments to make sure components stand the test of time and modify or remove them as needed.&lt;/p&gt;

&lt;p&gt;Just like PatternFly, the decision tree is not set in stone. Both are living resources that will evolve as we care for them and give them love.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Nov 2016 08:00:00 -0300</pubDate>
        <link>http://localhost:4000/patternfly/2016/11/09/patternfly-decision-tree.html</link>
        <guid isPermaLink="true">http://localhost:4000/patternfly/2016/11/09/patternfly-decision-tree.html</guid>
        
        <category>design</category>
        
        <category>patternfly</category>
        
        <category>decision</category>
        
        <category>maintenance</category>
        
        
        <category>patternfly</category>
        
        <author>
          <name>Andres Galante</name>
          <email>a@andresgalante.com</email>
        </author>
      </item>
    
      <item>
        <title>5 traits I’ve learned about leadership</title>
        <description>&lt;p&gt;&lt;img src=&quot;/img/leadership/leadership.jpg&quot; alt=&quot;leadership&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have the best job in the world. I work in a &lt;a href=&quot;https://www.redhat.com/&quot;&gt;great company&lt;/a&gt;, doing what I love in a &lt;a href=&quot;https://www.patternfly.org/&quot;&gt;large scale open source project&lt;/a&gt;, surrounded by talented people that I like and respect, and with all the resources I could ask for.&lt;/p&gt;

&lt;p&gt;This environment can only be accomplished because I work besides great leaders, and even though they are different, they all share some qualities:&lt;/p&gt;

&lt;h2 id=&quot;1-they-are-empathic&quot;&gt;1. They are empathic&lt;/h2&gt;

&lt;p&gt;Great leaders have the ability to understand and relate to their community in a selfish, kind and open way. They know how to listen and they can make any group feel taken care of, no matter what size it is.&lt;/p&gt;

&lt;p&gt;They don’t fake it, they truly care, that’s why they are loved.&lt;/p&gt;

&lt;h2 id=&quot;2-they-are-brave&quot;&gt;2. They are brave&lt;/h2&gt;

&lt;p&gt;Great leaders are quick to decide and quick to change. They know who they are, what they stand for and where they are going. That’s why they can reverse engineer their goals. They are are quick to decide and act, and quick to pivot when things go wrong. They change and adapt.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“It is not the strongest of the species, nor the most intelligent that survives. It is the one that is most adaptable to change.”
Charles Darwin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That braveness and sense of security makes them curious. Great leaders aren’t afraid of their ignorance. They are always willing to learn and they are constantly looking for new challenges to tackle.&lt;/p&gt;

&lt;h2 id=&quot;3-they-put-themselves-in-the-front-line&quot;&gt;3. They put themselves in the front line&lt;/h2&gt;

&lt;p&gt;A great leader would never ask for something he is not willing to do. Some of the best generals in history went to the front lines, and their armies defended them with their life, a devotion that drove victories against all odds. They lead by example and make sure to walk the talk.&lt;/p&gt;

&lt;h2 id=&quot;4-they-are-patient&quot;&gt;4. They are patient&lt;/h2&gt;

&lt;p&gt;Great leaders are aware that things don’t happen overnight. This is not a matter of speed, most of them go fast, but they are wise enough to know when to stop and think, how to react on different circumstances and how to generate the conditions for their projects to flourish. Something that can only be achieved if they enjoy the virtue of patience.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“He that can have patience can have what he will.”
Benjamin Franklin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;5-they-are-grateful&quot;&gt;5. They are grateful&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ted.com/talks/david_steindl_rast_want_to_be_happy_be_grateful?language=en&quot;&gt;Giving thanks can make anyone happier&lt;/a&gt;, but great leaders are truly grateful. They feel indebted to their surroundings and they are convinced that their achievements are due to their community successes. It’s a motivation that keeps them going.&lt;/p&gt;

&lt;p&gt;Great leaders are not born or appointed, they are chosen. If I ever earn that privilege, I wish I can be as good as the ones I follow and admire.&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Oct 2016 20:05:36 -0300</pubDate>
        <link>http://localhost:4000/random/2016/10/23/patternfly-spaces.html</link>
        <guid isPermaLink="true">http://localhost:4000/random/2016/10/23/patternfly-spaces.html</guid>
        
        <category>random</category>
        
        <category>patternfly</category>
        
        <category>leadership</category>
        
        
        <category>random</category>
        
        <author>
          <name>Andres Galante</name>
          <email>a@andresgalante.com</email>
        </author>
      </item>
    
      <item>
        <title>Dance to the new PatternFly flow</title>
        <description>&lt;p&gt;&lt;img src=&quot;/img/spaces/spaces.jpg&quot; alt=&quot;PatternFly new visuals&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you follow this blog you should know that for the past two years I’ve been a contributor to &lt;a href=&quot;https://www.patternfly.org/&quot;&gt;the PatternFly project&lt;/a&gt;. Five month ago, I’ve joined the PatternFly team and I am working full time to push the boundaries of open source design.&lt;/p&gt;

&lt;p&gt;We are currently working on PatterFly 4, a major release that will include design and code improvements. The two main design changes that we are introducing are around typography and spaces, including a much necessary &lt;a href=&quot;https://medium.com/attack-the-front/your-body-text-is-too-small-5e02d36dc902#.o9y3t6r40&quot;&gt;font size base bump&lt;/a&gt; to 14px and moving our font family from &lt;a href=&quot;https://fonts.google.com/specimen/Open+Sans&quot;&gt;Open
Sans&lt;/a&gt; to &lt;a href=&quot;http://overpassfont.org/&quot;&gt;Overpass&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can read all about these typography revisions on &lt;a href=&quot;https://github.com/orgs/patternfly/people/kybaker&quot;&gt;Kyle Bakers&lt;/a&gt; &lt;a href=&quot;https://blog.patternfly.org/choosing-the-best-font-for-application-design/&quot;&gt;article on the PatterFly blog&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;spacing-rhythm-and-flow&quot;&gt;Spacing, Rhythm and Flow&lt;/h2&gt;

&lt;p&gt;One of the key elements of both print and web design is the way the typography flows, we call it Rhythm.&lt;/p&gt;

&lt;p&gt;There are several books and articles explaining what Typographic Rhythm is. If you are looking for an in depth detail about typography you should read &lt;a href=&quot;https://www.amazon.com/Elements-Typographic-Style-Robert-Bringhurst/dp/0881791326&quot;&gt;The Elements of Typographic Style&lt;/a&gt; else, I recommend &lt;a href=&quot;http://typecast.com/blog/4-simple-steps-to-vertical-rhythm&quot;&gt;this article by Shelly Wilson&lt;/a&gt; on the &lt;a href=&quot;http://typecast.com/&quot;&gt;typecast blog&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rhythm is just a repeated pattern. The more consistent the pattern, the better the rhythm. In music, it’s the structure that ties all the different instruments together. Even if the notes are correct, a song with an inconsistent rhythm is pretty hard to listen to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In design, vertical rhythm is the structure that guides a reader’s eye through the content. Good vertical rhythm makes a layout more balanced and beautiful and its content more readable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The time signature in sheet music visually depicts a song’s rhythm, while for us, the lines of the baseline grid depict the rhythm of our content and give us guidelines to align text and objects to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Therefore the typographic change we are introducing to PatternFly 4 would be incomplete without an overall adjustment of spaces.&lt;/p&gt;

&lt;h2 id=&quot;relative-spaces&quot;&gt;Relative spaces&lt;/h2&gt;

&lt;p&gt;To define spaces on PatternFly 4 we will use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/length&quot;&gt;CSS relative units&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Each one of these units are relative to a different base, some are based on the viewport size, others to the size of the container element, and others to the size of the font.&lt;/p&gt;

&lt;p&gt;In our case we will use &lt;code class=&quot;highlighter-rouge&quot;&gt;rem&lt;/code&gt;. The &lt;a href=&quot;https://www.w3.org/TR/2016/CR-css-values-3-20160929/#rem&quot;&gt;W3C CSS specs&lt;/a&gt; define &lt;code class=&quot;highlighter-rouge&quot;&gt;rem&lt;/code&gt; as:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Equal to the computed value of font-size on the root element. When specified on the font-size property of the root element, the rem units refer to the property’s initial value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since PatterFly 4 root font size is &lt;code class=&quot;highlighter-rouge&quot;&gt;14px&lt;/code&gt;, then &lt;code class=&quot;highlighter-rouge&quot;&gt;1rem = 14px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;2rem = 28px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;0.5rem = 7px&lt;/code&gt;… well you get the idea.&lt;/p&gt;

&lt;p&gt;This system will define all our spaces, from typography, paddings and margins to grids and gutters.&lt;/p&gt;

&lt;h2 id=&quot;variables-and-utility-classes&quot;&gt;Variables and utility classes&lt;/h2&gt;

&lt;p&gt;To ensure consistency we are delineating spacing with Sass variables and utility classes.&lt;/p&gt;

&lt;p&gt;Since PatterFly 4 is based on &lt;a href=&quot;http://v4-alpha.getbootstrap.com/&quot;&gt;Bootstrap 4&lt;/a&gt;, we will be able to &lt;a href=&quot;http://v4-alpha.getbootstrap.com/utilities/spacing/&quot;&gt;take advantage&lt;/a&gt; of the &lt;a href=&quot;https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss#L79-L100&quot;&gt;nifty utility sass variable&lt;/a&gt; to build our spacing.&lt;/p&gt;

&lt;p&gt;Using sass variables to set the utility classes will keep our code DRY, maintain consistency and allowing users to easily create spaces on their implementations.&lt;/p&gt;

&lt;h2 id=&quot;work-in-progress&quot;&gt;Work in progress&lt;/h2&gt;

&lt;p&gt;As a start point we are basing our components on a set of default spaces:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sass&quot; data-lang=&quot;sass&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;m&quot;&gt;1rem&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pf-spacer-xxxs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pf-spacer-xxs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pf-spacer-xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;.75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pf-spacer-sm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pf-spacer-md&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;17px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pf-spacer-lg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;21px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pf-spacer-xl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;24px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pf-spacer-xxl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pf-spacer-xxxl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;35&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pf-spacer-xxxxl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$spacer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;But I am sure that as we move forward adding components to the &lt;a href=&quot;https://github.com/patternfly/patternfly-atomic&quot;&gt;new PatterFly Atomic repo&lt;/a&gt;, we will need to adjust removing or adding variables.&lt;/p&gt;

&lt;h2 id=&quot;want-to-dance-with-us&quot;&gt;Want to dance with us?&lt;/h2&gt;

&lt;p&gt;This is without a doubt the best CSS project I’ve ever work with.&lt;/p&gt;

&lt;p&gt;If you want to join the talented &lt;strong&gt;UXD CSS Army:heart:&lt;/strong&gt; send an email to &lt;a href=&quot;mailto:patternfly@redhat.com&quot;&gt;the PatterFly mailing list&lt;/a&gt;, contact us on the &lt;a href=&quot;http://patternfly.slack.com&quot;&gt;Slack&lt;/a&gt; or &lt;a href=&quot;http://webchat.freenode.net/?channels=#patternfly&quot;&gt;IRC channel&lt;/a&gt;, or just &lt;a href=&quot;https://github.com/patternfly/patternfly-atomic&quot;&gt;fork the repo&lt;/a&gt; and send us a PR :smile:&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Oct 2016 20:05:36 -0300</pubDate>
        <link>http://localhost:4000/patternfly/2016/10/22/five-traits-about-leadership.html</link>
        <guid isPermaLink="true">http://localhost:4000/patternfly/2016/10/22/five-traits-about-leadership.html</guid>
        
        <category>news</category>
        
        <category>patternfly</category>
        
        <category>spacing</category>
        
        <category>CSS</category>
        
        
        <category>patternfly</category>
        
        <author>
          <name>Andres Galante</name>
          <email>a@andresgalante.com</email>
        </author>
      </item>
    
      <item>
        <title>CSSconf: Welcome to Argentina</title>
        <description>&lt;p&gt;&lt;img src=&quot;/img/cssconf/cssconf.jpg&quot; alt=&quot;Patternfly Charts&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On Sunday (August 7th), I was lucky enough to attend to the first &lt;a href=&quot;http://cssconfar.com/&quot;&gt;CSSconf in Argentina&lt;/a&gt; and it was spectacular.&lt;/p&gt;

&lt;p&gt;The organization was spotless. &lt;a href=&quot;https://twitter.com/evaferreira92&quot;&gt;Eva Ferreira&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/louMontano&quot;&gt;Lourdes Montano&lt;/a&gt; and the rest of the team that put together this event should give themselves a big (but painful) pat on their backs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Escuela_Superior_de_Comercio_Carlos_Pellegrini&quot;&gt;The venue&lt;/a&gt; was really well chosen. The conference gifts didn’t suck, instead of low quality t-shirt that always end up as a pajama, they gave to each one of us a super nice handcrafted mug among other things. And last but not least the food was superb.&lt;/p&gt;

&lt;p&gt;It really shows the effort, time and love they put into it.&lt;/p&gt;

&lt;h2 id=&quot;the-speakers&quot;&gt;The speakers&lt;/h2&gt;

&lt;p&gt;The line up was a mixture between international super stars and local developers. To me the highlights where:&lt;/p&gt;

&lt;h3 id=&quot;una-kravets&quot;&gt;Una Kravets&lt;/h3&gt;

&lt;p&gt;The day started with &lt;a href=&quot;https://twitter.com/una&quot;&gt;Una Kravets&lt;/a&gt;, the unacorn herself, explaining how to use blend modes, filters and gradients in real life projects.&lt;/p&gt;

&lt;p&gt;I’ve heard her talk about this subject on other opportunities, and as always she shines on stage. Plus I’ve learn about &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;backdrop-filter&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;rachel-nabors&quot;&gt;Rachel Nabors&lt;/h3&gt;
&lt;p&gt;The queen of web animations talked about the new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API&quot;&gt;Web Animation API&lt;/a&gt; with some charming examples based on Alice in wonderland.&lt;/p&gt;

&lt;h3 id=&quot;werther-azevedo&quot;&gt;Werther Azevedo&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/w_midipixel&quot;&gt;Werther Azevedo&lt;/a&gt;, from Brazil, showed us how to build a game using the DOM.&lt;/p&gt;

&lt;p&gt;It was an interesting presentation that inspired us to build web games. On stage he came across as a likable and honest person, a feeling that was confirmed after having a quick chat with him during a brake.&lt;/p&gt;

&lt;h3 id=&quot;ami-reynoso&quot;&gt;Ami Reynoso&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/bakery&quot;&gt;Ami  Reynoso&lt;/a&gt; was really nervous. She spoke giving her back to the audience and looking at the projector.&lt;/p&gt;

&lt;p&gt;Nevertheless the content of her talk was really good. She showed how performance is key to achieve good business metrics and how Mercado Libre applies critical CSS.&lt;/p&gt;

&lt;p&gt;I think Ami will be a great presenter once she gains confidence.&lt;/p&gt;

&lt;h3 id=&quot;horia-dragomir&quot;&gt;Horia Dragomir&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/hdragomir&quot;&gt;Horia Dragomir&lt;/a&gt; showcase how messenger.com was built.&lt;/p&gt;

&lt;p&gt;It was a very interesting and fun short talk about how CSS is written in facebook with useful tips to follow in our projects.&lt;/p&gt;

&lt;h3 id=&quot;aurelia-moser&quot;&gt;Aurelia Moser&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/auremoser&quot;&gt;Aurelia Moser&lt;/a&gt; talked about &lt;a href=&quot;https://carto.com/docs/carto-engine/cartocss/&quot;&gt;CartoCSS&lt;/a&gt;. Styling maps is something completely off my randar, and although I don’t see myself doing it in the near future I am glad I’ve got introduce to it.&lt;/p&gt;

&lt;h3 id=&quot;harry-roberts&quot;&gt;Harry Roberts&lt;/h3&gt;
&lt;p&gt;To end the day &lt;a href=&quot;https://twitter.com/csswizardry&quot;&gt;Harry Roberts&lt;/a&gt;, Mr. CSSguidelines.&lt;/p&gt;

&lt;p&gt;He talked about refactoring CSS and it was one of the best presentations I’ve ever seen. Maybe it just resonates with me because I am thinking about how to refactor &lt;a href=&quot;https://www.patternfly.org/&quot;&gt;PatternFly&lt;/a&gt; CSS.&lt;/p&gt;

&lt;p&gt;He is a stellar presenter with insightful and accurate content based on his experience with huge clients.&lt;/p&gt;

&lt;h2 id=&quot;happy-ending&quot;&gt;Happy ending&lt;/h2&gt;

&lt;p&gt;Overall it was a great event. I am glad Buenos Aires has a CSSconf and I can’t wait for next year.&lt;/p&gt;

&lt;!-- There is room to improvements on the choice of local speakers. Ami Reynosos presentation had very good content, but to me the rest of them were not up to the standards. Maybe the bar was just too high. --&gt;
</description>
        <pubDate>Mon, 08 Aug 2016 16:34:20 -0300</pubDate>
        <link>http://localhost:4000/random/2016/08/08/CSS-Conf-Argentina.html</link>
        <guid isPermaLink="true">http://localhost:4000/random/2016/08/08/CSS-Conf-Argentina.html</guid>
        
        <category>css</category>
        
        <category>cssconf</category>
        
        <category>cssconfar</category>
        
        <category>patternfly</category>
        
        
        <category>random</category>
        
        <author>
          <name>Andres Galante</name>
          <email>a@andresgalante.com</email>
        </author>
      </item>
    
      <item>
        <title>The RGBA to feColorMatrix converter</title>
        <description>&lt;p&gt;&lt;img src=&quot;/img/rgbtocolor/rgba-to-color-matrix.jpg&quot; alt=&quot;Red Hat Summit Keynote Demo&quot; /&gt;
This year I’ve been lucky enough to be part of the team building the Red Hat keynote demo at &lt;a href=&quot;https://youtu.be/tPqbM3buK8M&quot;&gt;Red Hat Summit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation ended up dynamically building a picture mosaic of the Red Hat logo out of selfies taken by the audience. It was an impressive visualisation that I helped &lt;a href=&quot;https://twitter.com/brianleathem&quot;&gt;Brian Leatheam&lt;/a&gt; create.&lt;/p&gt;

&lt;!-- You can check the complete story in this DevNation talk: --&gt;

&lt;h2 id=&quot;process&quot;&gt;Process&lt;/h2&gt;
&lt;p&gt;Mapping an image and building a mosaic following some CSS filters and blend modes took about 3 days to a skilful DOM manipulator like Brian.&lt;/p&gt;

&lt;p&gt;But we’ve spent at least a moth iterating on designs details, trying new animations and optimising the performance.&lt;/p&gt;

&lt;p&gt;During one of those iterations, and aiming to achieve good performance and smooth animation we’ve tried SVGs instead of HTML images. That also implied changing our CSS blend modes to an SVG filter, in this case the &lt;code class=&quot;highlighter-rouge&quot;&gt;feColorMatrix&lt;/code&gt; filter.&lt;/p&gt;

&lt;h2 id=&quot;the-fecolormatrix-svg-filters&quot;&gt;The feColorMatrix SVG filters&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feColorMatrix&quot;&gt;feColorMatrix&lt;/a&gt; is an SVG filter that changes colors based on a transformation matrix. Every pixel’s color value (represented by an [R,G,B,A] vector) is &lt;a href=&quot;https://en.wikipedia.org/wiki/Matrix_multiplication&quot;&gt;matrix multiplied&lt;/a&gt; to create a new color.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This filter is really powerful and allows granular per channel color manipulation, kinda like editing the channels on Photoshop.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://una.im/&quot;&gt;Una Kravets&lt;/a&gt; wrote an &lt;a href=&quot;http://alistapart.com/article/finessing-fecolormatrix&quot;&gt;excellent list apart article&lt;/a&gt; explaining how to use it.&lt;/p&gt;

&lt;h2 id=&quot;rgba-to-fecolormatrix&quot;&gt;RGBA to feColorMatrix&lt;/h2&gt;

&lt;p&gt;Color manipulation with &lt;code class=&quot;highlighter-rouge&quot;&gt;feColorMatrix&lt;/code&gt; seems limitless, I could colorise an element any way I wanted. But what I needed for the mosaic was to reproduce an exact RGB value into the color matrix, and that was tricky.&lt;/p&gt;

&lt;p&gt;It’s not a common problem to have, no one was asking about it on &lt;a href=&quot;https://stackoverflow.com/&quot;&gt;StackOverflow&lt;/a&gt;.  But the answer was simple.&lt;/p&gt;

&lt;p&gt;Since RGB are based on a 255 scale, I just needed to divide the RGB value by 255 and I get the matrix value for each channel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/rgbtocolor/preview01.jpg&quot; alt=&quot;RGBAtoFeColorMatrix preview&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For example RGB &lt;code class=&quot;highlighter-rouge&quot;&gt;255, 255, 255&lt;/code&gt; becomes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/rgbtocolor/preview02.jpg&quot; alt=&quot;RGBAtoFeColorMatrix preview red&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pure red &lt;code class=&quot;highlighter-rouge&quot;&gt;255, 0, 0&lt;/code&gt; becomes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/rgbtocolor/preview03.jpg&quot; alt=&quot;RGBAtoFeColorMatrix preview pink&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And a pink &lt;code class=&quot;highlighter-rouge&quot;&gt;255, 30, 150&lt;/code&gt; becomes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1     0     0     0
0     1.22  0     0
0     0     0.59  0
0     0     0     1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now that I had the math sort out it was easy to colorise our mosaic.&lt;/p&gt;

&lt;h2 id=&quot;sharing-is-caring&quot;&gt;Sharing is caring&lt;/h2&gt;

&lt;p&gt;In the very odd chance that there is someone else out there trying to transform an an RGA value into a color matrix, I set myself to build an &lt;a href=&quot;http://blog.andresgalante.com/RGBAtoFeColorMatrix/&quot;&gt;RGBA to feColorMatrix converter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Of course I couldn’t do it by myself, my javascript knowledge is still very basic (it sucks!). So I designed the layout, &lt;a href=&quot;https://twitter.com/brianleathem&quot;&gt;Brian Leatheam&lt;/a&gt; made the magic happen and &lt;a href=&quot;https://twitter.com/priley86&quot;&gt;Patrick Riley&lt;/a&gt; took it to the next level and built a webcomonent.&lt;/p&gt;

&lt;h2 id=&quot;webcomponent&quot;&gt;Webcomponent&lt;/h2&gt;

&lt;p&gt;Once the tool was working, &lt;a href=&quot;https://twitter.com/priley86&quot;&gt;Patrick&lt;/a&gt; forked it and built a &lt;a href=&quot;https://www.polymer-project.org/1.0/&quot;&gt;polymer&lt;/a&gt; webcomonent out of it.&lt;/p&gt;

&lt;p&gt;Thanks to Patrick this converter is now an even cooler project.&lt;/p&gt;

&lt;h2 id=&quot;open-source&quot;&gt;Open Source&lt;/h2&gt;

&lt;p&gt;This project is open and you can do whatever you want with it.&lt;/p&gt;

&lt;p&gt;The source code for the &lt;a href=&quot;https://github.com/andresgalante/RGBAtoFeColorMatrix&quot;&gt;webcomponent is here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And you can &lt;a href=&quot;http://blog.andresgalante.com/RGBAtoFeColorMatrix/&quot;&gt;use it here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Jul 2016 20:05:36 -0300</pubDate>
        <link>http://localhost:4000/random/2016/07/09/rgba-to-fecolormatrix.html</link>
        <guid isPermaLink="true">http://localhost:4000/random/2016/07/09/rgba-to-fecolormatrix.html</guid>
        
        <category>howto</category>
        
        <category>patternfly</category>
        
        <category>setup</category>
        
        <category>npm</category>
        
        <category>bower</category>
        
        
        <category>random</category>
        
        <author>
          <name>Andres Galante</name>
          <email>a@andresgalante.com</email>
        </author>
      </item>
    
  </channel>
</rss>
